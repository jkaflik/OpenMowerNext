name: Build devcontainer

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
    paths:
      - '.devcontainer/Dockerfile'
      - '.devcontainer/**'
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - labeled
    paths:
      - '.devcontainer/Dockerfile'
      - '.devcontainer/**'

concurrency:
  group: ci-buildtrain-${{ github.ref }}-devcontainer
  cancel-in-progress: true

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: set lower case repository name
        run: |
          echo "REPOSITORY_LC=${REPOSITORY,,}-devcontainer" >>${GITHUB_ENV}
        env:
          REPOSITORY: '${{ github.repository }}'
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/${{env.REPOSITORY_LC}}

      - name: Login to GHCR
        if: github.event_name == 'push' || (github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'devcontainer:push-image'))
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: depot/setup-action@v1
      - name: Build and push image
        uses: depot/build-push-action@v1
        with:
          project: l6n2tkl9g1
          context: .devcontainer/
          file: .devcontainer/Dockerfile
          platforms: linux/amd64,linux/arm64
          outputs: type=image,name=ghcr.io/${{env.REPOSITORY_LC}},push-by-digest=true,name-canonical=true,push=${{ github.event_name == 'push' || (github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'devcontainer:push-image')) }}
          push: ${{ github.event_name == 'push' || (github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'devcontainer:push-image')) }}
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}
